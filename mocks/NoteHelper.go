// Code generated by mockery v2.46.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// NoteHelper is an autogenerated mock type for the NoteHelper type
type NoteHelper struct {
	mock.Mock
}

// OpenNote provides a mock function with given fields: relativeWeek, config
func (_m *NoteHelper) OpenNote(relativeWeek int, config NoteConfig) error {
	ret := _m.Called(relativeWeek, config)

	if len(ret) == 0 {
		panic("no return value specified for OpenNoteByInterval")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(int, NoteConfig) error); ok {
		r0 = rf(relativeWeek, config)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewNoteHelper creates a new instance of NoteHelper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewNoteHelper(t interface {
	mock.TestingT
	Cleanup(func())
}) *NoteHelper {
	mock := &NoteHelper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
